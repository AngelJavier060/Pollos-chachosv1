from supabase import create_client
import os
from dotenv import load_dotenv
import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT

# Usamos las credenciales directamente para pruebas
supabase_url = "https://fjrtsgsbdkflnbvlsrtd.supabase.co"
supabase_key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZqcnRzZ3NiZGtmbG5idmxzcnRkIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0MTQ2ODc1MiwiZXhwIjoyMDU3MDQ0NzUyfQ.iywq17CP8bLIqUNuP60a8YL_lx8_LKbsg2t0TOUodS4"

try:
    supabase = create_client(supabase_url, supabase_key)
    print("Conexión exitosa con Supabase")

    # Intentar crear la tabla usando el cliente REST
    response = supabase.table('usuarios').select('count').execute()
    print("La tabla usuarios ya existe")
    print("Registros encontrados:", len(response.data))

except Exception as e:
    print(f"Error al conectar con Supabase o verificar tabla: {str(e)}")

    try:
        # Si la tabla no existe, usamos el SQL Editor de Supabase
        print("Por favor, ejecute el siguiente SQL en el Editor SQL de Supabase:")
        print("""
        -- Crear tabla usuarios
        create table if not exists public.usuarios (
            id bigint generated by default as identity primary key,
            nombres text not null,
            apellidos text not null,
            cedula text not null unique,
            usuario text not null unique,
            correo text not null unique,
            password text not null,
            rol text not null,
            estado smallint not null default 1,
            vigencia integer,
            fecha_registro timestamp with time zone default timezone('utc'::text, now())
        );

        -- Habilitar RLS
        alter table public.usuarios enable row level security;

        -- Crear políticas
        create policy "Usuarios son visibles para usuarios autenticados"
        on public.usuarios for select
        to authenticated
        using (true);

        create policy "Usuarios pueden ser insertados por usuarios autenticados"
        on public.usuarios for insert
        to authenticated
        with check (true);

        create policy "Usuarios pueden ser actualizados por usuarios autenticados"
        on public.usuarios for update
        to authenticated
        using (true);

        create policy "Usuarios pueden ser eliminados por usuarios autenticados"
        on public.usuarios for delete
        to authenticated
        using (true);
        """)
        
    except Exception as ce:
        print(f"Error al procesar la operación: {str(ce)}")

if __name__ == "__main__":
    print("\nPara crear la tabla manualmente:")
    print("1. Ve a https://app.supabase.com")
    print("2. Selecciona tu proyecto")
    print("3. Ve a SQL Editor")
    print("4. Copia y pega el SQL mostrado arriba")
    print("5. Ejecuta el script")
